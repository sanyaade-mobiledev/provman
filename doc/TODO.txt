TODOs:
------

Provman:
-------

* Binary plugins

  Replace hardcoded plugins with executables.  Doing so would mean that we have
  no license conflict issues for the plugins and it should increase security
  as each binary plugin can be given the rights it needs, and only the rights it
  needs, to perform its various tasks.

* Currently sync_out is called for each synced plugin even if no settings
  managed by that plugin were modified during the session, i.e., the plugin's
  settings were only read.  Provman is obliged to call sync_out or abort for
  each synced plugin so that the plugins know when the session has come to an
  end.  Currently, it calls sync_out for all synced plugins.  However, this
  is a waste of resources, as the plugin needs to compare the old keys to the
  new keys to determine the changes that need to be made to the underlying
  middleware.  Since Provman knows that no changes need to be made it would
  be more efficient to simply call abort, if defined.

* Restrictions should be placed on Meta data property names.  Meta data is
  stored in g_key_files and there are restrictions on the characters that can
  be used in g_key_files keys.  Checks should thus be made in SetMeta and
  SetMultipleMeta to ensure that property names are compatible with g_key_file.

* Provman is very restrictive on the keys that can be used for settings.  To
  be honest it is currently too strict and the set of allowable keys should be
  increased.  In fact the only character we really need to disallow in a
  directory or setting name is '/'.

EDS Plugin:

* Make sure internal cache is synchronised with evolution. We could do this by
  deleting the internal cache at the end of each session as the oFono plugin
  does.  We could also listen for notifications to changes in email accounts
  during a session.

SyncE Plugin:

* Add RemoteDeviceId parameter

* Make sure internal cache is synchronised with evolution. We could do this by
  deleting the internal cache at the end of each session as the oFono plugin
  does.  We could also listen for notifications to changes in syncronisation
  accounts during a session.

* We should check the status of SyncEvolution before provisioning values.
  Currently, we do not do this, and I think this will cause problems if
  a sync session is running when we try to provision sync settings.  See
  http://lists.syncevolution.org/pipermail/syncevolution/2011-October/003032.html
  for more details.

oFono Plugin

* Check the use of cancellable in the oFono plugin.

  Do we really need to destroy the cancellable object and create a new one
  each time we invoke an asynchronous command.

* Listen to notifications and update internal data model.  This is only
  necessary during a session as the oFono plugin now deletes the cache
  at the end of each session.

* The oFono plugin caches all MMS accounts during a session even though only
  one account is ever used.  This cache is not currently used. However, it could
  be used to update the settings cache during a session.  Currently, if you
  delete an MMS account during a session, and then perform a GetAll during the
  same session the oFono plugin will report that no MMS account is provisioned,
  which will not be correct if multiple MMS accounts are provisioned in the
  system. If you end the current session and start a new session, MMS settings
  will be made available once more.  This is a little inconsistent and we could
  fix this by copying the cached mms account into main settings cache.  There
  are some implications of doing this.  If we simply copy the mms backup cache
  into the settings cache, no mms context will be deleted when the session ends.
  Instead the settings from the backup cache will be duplicated in the initial
  mms context.

* Needs to support 3G (not MMS) proxies.  This can be done by using the Connman
  APIs.

MeeGo Login Plugin

* Needs to be written.

Browser Plugin

* Needs to be written


